(** I Can't Believe It Can Sort *)

module ICantBelieveItCanSort

  use int.Int
  use array.Array
  use array.IntArraySorted
  use array.ArraySwap
  use array.ArrayPermut

  predicate max_array (a: array int) (lo hi i: int) =
    0 <= i < length a ->
      forall j. lo <= j < hi -> a[j] <= a[i]

  let i_cant_believe_it_can_sort (a: array int) : unit
    ensures { permut_all (old a) a }
    ensures { sorted a }
  = let n = length a in
    for i = 0 to n - 1 do
      invariant { permut_all (old a) a }
      invariant { sorted_sub a 0 (i-1) }
      invariant { max_array a 0 n (i-1)}
      for j = 0 to n - 1 do
        invariant { permut_all (old a) a }
        invariant { max_array a 0 j i }
        invariant { if j < i then max_array a 0 n (i-1)
                    else i = 0 || max_array a 0 n i }
        invariant { if j < i then sorted_sub a 0 (i-1)
                             else sorted_sub a 0 i }
        if a[i] < a[j] then swap a i j
      done
    done

end
